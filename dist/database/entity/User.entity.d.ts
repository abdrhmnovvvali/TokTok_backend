import { UserProvider } from "src/shared/enums/User.enum";
import { BaseEntity } from "typeorm";
import { ProfileEntity } from "./Profile.entity";
import { FollowEntity } from "./Follow.entity";
import { BanEntity } from "./Ban.entity";
import { PostEntity } from "./Post.entity";
import { PostActionEntity } from "./PostAction.entity";
import { PostCommentEntity } from "./PostComment.entity";
import { CommentLikeEntity } from "./CommentLike.entity";
import { StoryEntity } from "./Story.entity";
import { HighlightEntity } from "./Highlight.entity";
import { StoryActionEntity } from "./StoryAction.entity";
export declare class UserEntity extends BaseEntity {
    id: number;
    username: string;
    email: string;
    phone: string;
    password: string;
    isPrivate: boolean;
    provider: UserProvider;
    providerId: string;
    reportCount: number;
    isReport: boolean;
    createdAt: Date;
    updatedAt: Date;
    beforeUpsert(): Promise<void>;
    profile: ProfileEntity;
    following: FollowEntity[];
    follower: FollowEntity[];
    bannedUsers: BanEntity[];
    bannedBy: BanEntity[];
    posts: PostEntity[];
    postActions: PostActionEntity[];
    comments: PostCommentEntity[];
    commentLikes: CommentLikeEntity[];
    taggedInPosts: PostEntity[];
    stories: StoryEntity[];
    highlights: HighlightEntity[];
    storyActions: StoryActionEntity[];
}
